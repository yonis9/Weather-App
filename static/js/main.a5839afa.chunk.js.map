{"version":3,"sources":["components/NavBar.js","components/ToggleDayNight.js","components/SearchField.js","components/DayCard.js","components/DayList.js","components/CurrentWeather.js","components/Home.js","components/FavCard.js","components/FavList.js","components/Favorites.js","components/ErrorBoundry.js","components/Footer.js","containers/App.js","actions.js","constans.js","reducers.js","serviceWorker.js","index.js"],"names":["NavBar","onRouteChange","onClick","ToggleDayNight","onButtonClick","className","type","SearchField","onSearchChange","searchOutputs","setLocation","id","Autocomplete","options","getOptionLabel","option","LocalizedName","Country","onChange","event","value","style","width","renderInput","params","TextField","label","variant","fullWidth","DayCard","day","date","minTemp","maxTemp","tempUnit","icon","toString","length","alt","src","DayList","fiveDayForcast","DailyForecasts","map","i","key","Math","round","Temperature","Minimum","Value","Maximum","Unit","Day","Icon","Date","EpochDate","slice","CurrentWeather","currentConditions","location","toggleUnit","isCelsius","onFavoriteClick","isFavorite","opacity","WeatherIcon","faStar","size","WeatherText","Metric","Imperial","Headline","Text","Home","FavCard","name","country","weatherText","temp","onFavCardClick","Key","FavList","favorites","city","Favorites","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Footer","href","target","rel","faGithub","faLinkedin","App","getGeolocation","navigator","geolocation","getCurrentPosition","requestGeolocation","position","lat","coords","latitude","lon","longitude","fetch","process","then","response","json","data","handleFavorite","localStorage","getItem","arrayOfFavs","JSON","parse","Number","isInteger","checkIfFavorite","toggleFavorite","array","cityKey","lightBackground","document","getElementsByTagName","backgroundColor","color","toggleDayNight","fav","splice","setItem","stringify","push","locObj","getForcast","prevProps","prevSate","getFavoritesData","route","connect","changeUnit","requestSearchOutputs","changeLocation","requestForcast","requestFavoritesData","changeRoute","dispatch","bool","payload","e","text","catch","locationKey","arr","setRoute","initialStateRoute","initialStateLocation","Version","Type","Rank","ID","AdministrativeArea","initialStateUnit","initialStateSearch","initialStateForcast","initialStateIsFavorite","initialStateFavoritesList","initialStateDayNight","Boolean","window","hostname","match","require","config","logger","createLogger","rootReducer","combineReducers","action","Object","assign","isPending","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5839afa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavBar.css'\r\n\r\nconst NavBar = ( { onRouteChange }) => {\r\n    return (\r\n        <nav>\r\n            <h3>Herolo Weather Task</h3>\r\n            <ul>\r\n                <li onClick={()=> onRouteChange('home')}>HOME</li>\r\n                <li onClick={()=> onRouteChange('favorites')}>FAVORITES</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst ToggleDayNight = ({ onButtonClick }) => {\r\n    return (\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onClick={onButtonClick}/>\r\n        <span className=\"slider round\" ></span>\r\n      </label>\r\n    )\r\n}\r\n\r\nexport default ToggleDayNight;","import React  from 'react';\r\nimport './SearchField.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\n\r\nconst SearchField = ({ onSearchChange, searchOutputs, setLocation }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div id='search-con'>\r\n            \r\n        <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={searchOutputs}\r\n        getOptionLabel={option => option.LocalizedName +', ' +option.Country.LocalizedName}\r\n        onChange={(event, value) => setLocation(value)}\r\n        style={{ width: '50%' }}\r\n        renderInput={params => (\r\n            <TextField {...params} label=\"Choose your location\" variant=\"outlined\" fullWidth onChange={onSearchChange}/>\r\n        )}\r\n        />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport './DayCard.css'\r\n\r\nconst DayCard = ({ day, date, minTemp, maxTemp, tempUnit, icon}) => {\r\n    icon.toString().length < 2 ? icon = '0'+icon : icon = icon;\r\n    return (\r\n        <div className='card'>\r\n            <div className='date'>\r\n                <h4>{day}</h4>\r\n                <h4>{date}</h4>\r\n            </div>\r\n            <img alt='icon' src={`https://developer.accuweather.com/sites/default/files/${icon}-s.png`}/>\r\n            <h4>{maxTemp}°/{minTemp}° {tempUnit}</h4>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DayCard;","import React from 'react';\r\nimport DayCard from './DayCard';\r\nimport './DayList.css';\r\n\r\nconst DayList = ({ fiveDayForcast }) => {\r\n    return (\r\n        <div id='daylist'>\r\n    {        fiveDayForcast.DailyForecasts.map((day,i) => {\r\n            return (\r\n                <DayCard key={i}\r\n                         minTemp={Math.round(day.Temperature.Minimum.Value)}\r\n                         maxTemp={Math.round(day.Temperature.Maximum.Value)}\r\n                         tempUnit={day.Temperature.Maximum.Unit}\r\n                         icon={day.Day.Icon}\r\n                         day={new Date(day.EpochDate*1000).toString().slice(0, 3)}\r\n                         date={new Date(day.EpochDate*1000).toString().slice(4,15)} />\r\n            )\r\n        })\r\n    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayList;","import React from 'react';\r\nimport './CurrentWeather.css';\r\nimport DayList from  './DayList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst CurrentWeather = ({ currentConditions,fiveDayForcast, location, toggleUnit, isCelsius, onFavoriteClick, isFavorite }) => {\r\n    let style;\r\n    isFavorite ? style = {opacity: 1,} : style = {opacity: 0.4};\r\n\r\nlet icon;\r\ncurrentConditions.length ? icon =  currentConditions[0].WeatherIcon : icon = null;\r\nif (icon) {\r\n    icon.toString().length < 2 ? icon = '0'+icon : icon = icon;\r\n}\r\n\r\n\r\n    return (\r\n   currentConditions.length ?   \r\n     <div id='CurrentWeather-con'>\r\n            <div id='header'>\r\n                    <h3>{location.LocalizedName}, {location.Country.LocalizedName}</h3>\r\n                    <div id='right-box-header'>\r\n                        <div onClick={onFavoriteClick}>\r\n                            <FontAwesomeIcon icon={faStar} size=\"2x\" style={style} className=\"highlight\"  />\r\n                        </div>\r\n                        <h3  className='toggle-unit'onClick={()=>toggleUnit(!isCelsius)}>{isCelsius ? 'C' : 'F'}</h3>\r\n                    </div>\r\n             </div>\r\n            \r\n            <img alt='icon' src={`https://developer.accuweather.com/sites/default/files/${icon}-s.png`} />\r\n            <h1>{currentConditions[0].WeatherText}</h1>\r\n            {isCelsius ?\r\n        <h4>{Math.round(currentConditions[0].Temperature.Metric.Value)}° Celsius</h4>\r\n        : <h4>{Math.round(currentConditions[0].Temperature.Imperial.Value)}° Fahrenheit</h4>\r\n        }\r\n            \r\n            <div id='five-day-con'>\r\n                <h4>{fiveDayForcast.Headline.Text}</h4>\r\n                <DayList fiveDayForcast={fiveDayForcast} />\r\n            </div>\r\n\r\n        </div> : <h1>loading</h1>\r\n    \r\n    )\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport SearchField from './SearchField'\r\nimport CurrentWeather from './CurrentWeather';\r\n\r\nconst Home = ({ onSearchChange, searchOutputs, setLocation, currentConditions,fiveDayForcast,  location, toggleUnit, isCelsius, onFavoriteClick, isFavorite }) => {\r\n    return (\r\n        <div>\r\n            <SearchField onSearchChange={onSearchChange} searchOutputs={searchOutputs} setLocation={setLocation}/>\r\n            <CurrentWeather currentConditions={currentConditions}\r\n                            location={location} \r\n                            fiveDayForcast={fiveDayForcast}\r\n                            toggleUnit={toggleUnit}\r\n                            isCelsius={isCelsius}\r\n                            onFavoriteClick={onFavoriteClick}\r\n                            isFavorite={isFavorite}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './FavCard.css'\r\n\r\nconst FavCard = ({ id, name, country, weatherText, icon, temp, isCelsius, onFavCardClick}) => {\r\n    icon.toString().length < 2 ? icon = '0'+icon : icon = icon;\r\n    return (\r\n        <div id='fav-card' onClick={() => onFavCardClick({ \r\n            Key: id,\r\n            LocalizedName: name,\r\n            Country: { LocalizedName: country}\r\n            })}>\r\n        <div className='card'>\r\n                <h4>{name}, {country}</h4>\r\n                {\r\n                    isCelsius ? \r\n                    <h4>{Math.round(temp.Metric.Value)}° Celsius</h4> :\r\n                    <h4>{Math.round(temp.Imperial.Value)}° Fahrenheit</h4> \r\n                }\r\n                \r\n            <img alt='icon' src={`https://developer.accuweather.com/sites/default/files/${icon}-s.png`}/>\r\n            <h4>{weatherText}</h4>\r\n        </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavCard;","import React from 'react';\r\nimport FavCard from './FavCard';\r\nimport './FavList.css'\r\n\r\nconst FavList = ({ favorites, isCelsius, onFavCardClick }) => {\r\n    return (\r\n        <div id='favlist'>\r\n            { favorites.map(city => {\r\n                return (\r\n                    <FavCard id={city.id}\r\n                             key={city.id}\r\n                             name={city.name}\r\n                             country={city.country}\r\n                             weatherText={city.weatherText}\r\n                             icon={city.icon}\r\n                             temp={city.temp}\r\n                             isCelsius={isCelsius}\r\n                             onFavCardClick={onFavCardClick}/>\r\n                )\r\n            })\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavList;","import React from 'react';\r\nimport FavList from './FavList'\r\nimport './Favorites.css'\r\n\r\nconst Favorites = ( { favorites, toggleUnit, isCelsius, onFavCardClick }) => {\r\n    return (\r\n        <div>\r\n            <div id='fav-con'>\r\n                <h1>Your Favorites Places</h1>\r\n                <h3 className='toggle-unit' onClick={()=>toggleUnit(!isCelsius)}>{isCelsius ? 'C' : 'F'}</h3>\r\n            </div>\r\n            <div id='five-day-con'>\r\n                <FavList favorites={favorites} isCelsius={isCelsius} onFavCardClick={onFavCardClick}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites;","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return  <h1>Someting went wrong</h1>\r\n        }\r\n        return this.props.children\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport './Footer.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <div id='social'>\r\n                <a href='https://github.com/yonis9' target='_blank' rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n                </a>\r\n                <a href='https://www.linkedin.com/in/yonisisso/' target='_blank' rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { connect} from 'react-redux'\nimport './App.css';\nimport NavBar from '../components/NavBar';\nimport ToggleDayNight from '../components/ToggleDayNight';\nimport Home from '../components/Home';\nimport Favorites from '../components/Favorites'\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Footer from '../components/Footer';\n\nimport { toggleUnit, requestSearchOutput, setLocation, requestForcast, toggleFavorite, getFavoritesData, setRoute, toggleDayNight } from '../actions.js'\n\nconst mapStateToProps = state => {\n  return {\n    isCelsius: state.changeUnit.isCelsius,\n    searchOutputs: state.requestSearchOutputs.searchOutputs,\n    location: state.changeLocation.location,\n    currentConditions: state.requestForcast.currentConditions,\n    fiveDayForcast: state.requestForcast.fiveDayForcast,\n    isFavorite: state.toggleFavorite.isFavorite,\n    favorites: state.requestFavoritesData.favorites,\n    route: state.changeRoute.route,\n    lightBackground: state.toggleDayNight.lightBackground\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleUnit: (bool) => dispatch(toggleUnit(bool)),\n    onSearchChange: (e) => dispatch(requestSearchOutput(e.target.value)),\n    setLocation: (locationKey) => dispatch(setLocation(locationKey)),\n    getForcast: (cityKey, isCelsius) => dispatch(requestForcast(cityKey, isCelsius)),\n    toggleFavorite: (bool) => dispatch(toggleFavorite(bool)),\n    getFavoritesData: (favorites) => dispatch(getFavoritesData(favorites)),\n    onRouteChange: (route) => dispatch(setRoute(route)),\n    toggleDayNight: (bool) => dispatch(toggleDayNight(bool))\n  }\n}\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getForcast(this.props.location.Key, this.props.isCelsius);\n    this.handleFavorite()\n    this.getGeolocation()\n  }\n\n  componentDidUpdate(prevProps, prevSate) {\n    if (prevProps.location.Key !== this.props.location.Key) {\n      this.props.getForcast(this.props.location.Key, this.props.isCelsius);\n      this.handleFavorite()\n    }\n\n    if (prevProps.isCelsius !== this.props.isCelsius) {\n      this.props.getForcast(this.props.location.Key, this.props.isCelsius)\n    }\n\n    if(this.props.favorites.length && !JSON.parse(localStorage.getItem('favorites'))) {\n      this.props.toggleFavorite(false);\n      this.props.getFavoritesData([])\n    }\n\n    if(prevProps.route !==this.props.route && this.props.route === 'favorites') {\n            \n      this.props.getFavoritesData(JSON.parse(localStorage.getItem('favorites')))\n    }\n  }\n\n  getGeolocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.requestGeolocation);\n    }\n  }\n\n   requestGeolocation = (position) => {\n     const lat = position.coords.latitude;\n     const lon= position.coords.longitude;\n     fetch(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${process.env.REACT_APP_API_KEY}&q=${lat},${lon}`)\n     .then(response=> response.json())\n     .then(data => {\n       this.props.setLocation(data)\n     })\n  }\n\nhandleFavorite = () => {\n  if(localStorage.getItem('favorites')) {\n    let arrayOfFavs = JSON.parse(localStorage.getItem('favorites'))\n    if(Number.isInteger(this.checkIfFavorite(arrayOfFavs, this.props.location.Key))) {\n      this.props.toggleFavorite(true)\n    } else {\n      this.props.toggleFavorite(false)\n    }\n  }\n}\n  \n  checkIfFavorite = (array, cityKey) => {\n    for (let i=0; i<array.length; i++) {\n      if(cityKey === array[i].Key) {\n        return i\n      }\n    }\n    return false\n  }\n\n  onButtonClick = () => {\n    if(this.props.lightBackground) {\n      document.getElementsByTagName('body')[0].style.backgroundColor = '#333';\n      document.getElementsByTagName('body')[0].style.color = '#f2f2f2';\n    } else {\n      document.getElementsByTagName('body')[0].style.backgroundColor = '#f2f2f2';\n      document.getElementsByTagName('body')[0].style.color = '#333';\n    }\n    this.props.toggleDayNight(!this.props.lightBackground)\n  }\n\n\n  onFavoriteClick = () => {\n    if (!this.props.isFavorite) {\n      let fav = localStorage.getItem('favorites');\n      if (!fav) {\n        localStorage.setItem('favorites', JSON.stringify([this.props.location]))\n      } else {\n        fav = JSON.parse(fav);\n        fav.push(this.props.location);\n        localStorage.setItem('favorites', JSON.stringify(fav))\n      }\n      this.props.toggleFavorite(true)\n    } else {\n      let fav = JSON.parse(localStorage.getItem('favorites'));\n      const i = this.checkIfFavorite(fav, this.props.location.Key);\n      fav.splice(i, 1);\n      localStorage.setItem('favorites', JSON.stringify(fav))\n      this.props.toggleFavorite(false)\n    }\n\n  }\n\n  onFavCardClick = (locObj) => {\n    this.props.setLocation(locObj)\n    this.props.onRouteChange('home')\n  }\n\n  render() {\n    const { toggleUnit, isCelsius, searchOutputs, onSearchChange, location, setLocation, fiveDayForcast, currentConditions, isFavorite, favorites, onRouteChange, route } = this.props;\n    return (\n      \n      <div className=\"App\">\n        <NavBar onRouteChange={onRouteChange}/>\n        <ErrorBoundry>\n        <ToggleDayNight onButtonClick={this.onButtonClick}/>\n\n  {     route === 'home' ? \n    \n          <Home onSearchChange={onSearchChange}\n                searchOutputs={searchOutputs}\n                setLocation={setLocation}\n                fiveDayForcast={fiveDayForcast}\n                currentConditions={currentConditions}\n                location={location}\n                toggleUnit={toggleUnit}\n                isCelsius={isCelsius}\n                onFavoriteClick={this.onFavoriteClick}\n                isFavorite={isFavorite}/>\n                :\n          <Favorites favorites={favorites}\n                    toggleUnit={toggleUnit}\n                    isCelsius={isCelsius}\n                    onFavCardClick={this.onFavCardClick}/>\n          \n          } \n          <Footer />\n        </ErrorBoundry>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { CHANGE_ROUTE,\r\n     CHANGE_LOCATION, \r\n     CHANGE_UNIT,\r\n    REQUEST_SEARCH_FAILED,\r\n    REQUEST_SEARCH_SUCCESS,\r\n    REQUEST_SEARCH_PENDING,\r\n    REQUEST_FORCAST_FAILED, \r\n    REQUEST_FORCAST_PENDING,\r\n    REQUEST_FORCAST_SUCCESS,\r\n    TOGGLE_FAVORITE,\r\n    REQUEST_FAVORITE_DATA_PENDING,\r\n    REQUEST_FAVORITE_DATA_SUCCESS,\r\n    REQUEST_FAVORITE_DATA_FAILED,\r\n    REQUEST_FAVORITE_DATA_EMPTY,\r\n    TOGGLE_DAY_NIGHT} from './constans.js';\r\n\r\n\r\n\r\nexport const setRoute = (route) => ({\r\n    type: CHANGE_ROUTE,\r\n    payload: route\r\n})\r\n\r\nexport const setLocation = (location) => ({\r\n    type: CHANGE_LOCATION,\r\n    payload: location\r\n})\r\n\r\nexport const toggleUnit = (unit) => ({\r\n    type: CHANGE_UNIT,\r\n    payload: unit\r\n})\r\n\r\nexport const requestSearchOutput = (text) => (dispatch) => {\r\n   \r\n        dispatch({type: REQUEST_SEARCH_PENDING});\r\n        fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${text}&language=en-us`)\r\n        .then(response => response.json())\r\n        .then(data => dispatch({type: REQUEST_SEARCH_SUCCESS, payload: data}))\r\n        .catch(error => dispatch({type: REQUEST_SEARCH_FAILED, payload: error}))\r\n      \r\n}\r\n\r\nexport const requestForcast = (cityKey, isCelsius) => dispatch => {\r\n    dispatch({type: REQUEST_FORCAST_PENDING});\r\n    fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${process.env.REACT_APP_API_KEY}&details=false&metric=${isCelsius}`)\r\n    .then(response => response.json())\r\n    .then(fiveDayForcast => {\r\n      fetch(`http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${process.env.REACT_APP_API_KEY}`)\r\n      .then(response => response.json())\r\n      .then(currentConditions => dispatch({type: REQUEST_FORCAST_SUCCESS, payload: {fiveDayForcast, currentConditions}}))\r\n    })\r\n    .catch(error => dispatch({type: REQUEST_FORCAST_FAILED, payload: error}))\r\n}\r\n\r\nexport const toggleFavorite = (bool) => ({\r\n    type: TOGGLE_FAVORITE,\r\n    payload: bool\r\n})\r\n\r\n\r\nexport const getFavoritesData = (favorites) => dispatch => {\r\n     if (favorites) {\r\n      if (!favorites.length) {\r\n        dispatch({type: REQUEST_FAVORITE_DATA_EMPTY, payload: []})\r\n      } else {\r\n        dispatch({type: REQUEST_FAVORITE_DATA_PENDING})\r\n        let arr = []\r\n        for (let i=0; i< favorites.length; i++) {\r\n          fetch(`http://dataservice.accuweather.com/currentconditions/v1/${favorites[i].Key}?apikey=O2GFMOo9jRKxPEMJ4BbzguAoeTVNAmz1`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            arr.push({id: favorites[i].Key,\r\n                      name: favorites[i].LocalizedName,\r\n                    country: favorites[i].Country.LocalizedName,\r\n                    weatherText: data[0].WeatherText,\r\n                    icon: data[0].WeatherIcon,\r\n                    temp: data[0].Temperature\r\n                  })\r\n                  if (i===favorites.length-1) {\r\n                    dispatch({type: REQUEST_FAVORITE_DATA_SUCCESS, payload: arr})\r\n                  }\r\n          })\r\n          .catch(error => dispatch({type: REQUEST_FAVORITE_DATA_FAILED, payload: error}))\r\n        }\r\n        \r\n      }\r\n\r\n    }\r\n}\r\n\r\nexport const toggleDayNight = (bool) => ({\r\n    type: TOGGLE_DAY_NIGHT,\r\n    payload: bool\r\n})","export const CHANGE_ROUTE = 'CHANGE_ROUTE';\r\nexport const CHANGE_LOCATION = 'CHANGE_LOCATION';\r\nexport const CHANGE_UNIT = 'CHANGE_UNIT';\r\nexport const  REQUEST_SEARCH_PENDING = 'REQUEST_SEARCH_PENDING';\r\nexport const  REQUEST_SEARCH_SUCCESS = 'REQUEST_SEARCH_SUCCESS';\r\nexport const  REQUEST_SEARCH_FAILED = 'REQUEST_SEARCH_FAILED';\r\nexport const  REQUEST_FORCAST_PENDING = 'REQUEST_FORCAST_PENDING';\r\nexport const  REQUEST_FORCAST_SUCCESS = 'REQUEST_FORCAST_SUCCESS';\r\nexport const  REQUEST_FORCAST_FAILED = 'REQUEST_FORCAST_FAILED';\r\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';\r\nexport const REQUEST_FAVORITE_DATA_PENDING = 'REQUEST_FAVORITE_DATA_PENDING';\r\nexport const REQUEST_FAVORITE_DATA_SUCCESS = 'REQUEST_FAVORITE_DATA_SUCCESS';\r\nexport const REQUEST_FAVORITE_DATA_FAILED = 'REQUEST_FAVORITE_DATA_FAILED';\r\nexport const REQUEST_FAVORITE_DATA_EMPTY = 'REQUEST_FAVORITE_DATA_EMPTY';\r\nexport const TOGGLE_DAY_NIGHT = 'TOGGLE_DAY_NIGHT';","import { CHANGE_ROUTE,\r\n    CHANGE_LOCATION, \r\n    CHANGE_UNIT,\r\n   REQUEST_SEARCH_FAILED,\r\n   REQUEST_SEARCH_SUCCESS,\r\n   REQUEST_SEARCH_PENDING,\r\n   REQUEST_FORCAST_FAILED, \r\n   REQUEST_FORCAST_PENDING,\r\n   REQUEST_FORCAST_SUCCESS,\r\n   TOGGLE_FAVORITE,\r\n   REQUEST_FAVORITE_DATA_PENDING,\r\n   REQUEST_FAVORITE_DATA_SUCCESS,\r\n   REQUEST_FAVORITE_DATA_FAILED,\r\n   REQUEST_FAVORITE_DATA_EMPTY,\r\n   TOGGLE_DAY_NIGHT} from './constans.js';\r\n\r\n\r\n\r\n\r\n\r\nconst initialStateRoute = {\r\n    route: 'home'\r\n}\r\n\r\nexport const changeRoute = (state=initialStateRoute, action={}) => {\r\n    switch(action.type) {\r\n        case CHANGE_ROUTE:\r\n            return Object.assign({}, state, {route: action.payload});\r\n        default:  return state;\r\n    }\r\n    \r\n}\r\n\r\nconst initialStateLocation = {\r\n    location: { Version: 1,\r\n        Key: \"215854\",\r\n        Type: \"City\",\r\n        Rank: 31,\r\n        LocalizedName: \"Tel Aviv\",\r\n        Country: {ID: \"IL\", LocalizedName: \"Israel\"},\r\n        AdministrativeArea: {ID: \"TA\",LocalizedName: \"Tel Aviv\"}\r\n      }\r\n}\r\n\r\nexport const changeLocation = (state=initialStateLocation, action={}) => {\r\n    switch(action.type) {\r\n        case CHANGE_LOCATION:\r\n            return Object.assign({}, state, {location: action.payload});\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst initialStateUnit = {\r\n    isCelsius: true\r\n}\r\n\r\nexport const changeUnit = (state=initialStateUnit, action={}) => {\r\n    switch(action.type) {\r\n        case CHANGE_UNIT:\r\n            return Object.assign({}, state, {isCelsius: action.payload});\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateSearch = {\r\n    searchOutputs: []\r\n}\r\n\r\nexport const requestSearchOutputs = (state=initialStateSearch, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_SEARCH_PENDING:\r\n            return Object.assign({}, state, {isPending: true});\r\n        case REQUEST_SEARCH_SUCCESS:\r\n            return Object.assign({}, state, {searchOutputs: action.payload, isPending: false});\r\n        case REQUEST_SEARCH_FAILED:\r\n            return Object.assign({}, state, {error: action.payload, isPending: false});\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst initialStateForcast = {\r\n    fiveDayForcast: {},\r\n    currentConditions: []\r\n}\r\n\r\nexport const requestForcast = (state=initialStateForcast, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_FORCAST_PENDING:\r\n            return Object.assign({}, state, {isPending: true})\r\n        case REQUEST_FORCAST_SUCCESS:\r\n            return Object.assign({}, state, {fiveDayForcast: action.payload.fiveDayForcast, currentConditions: action.payload.currentConditions, isPending: false})\r\n        case REQUEST_FORCAST_FAILED:\r\n            return Object.assign({}, state, {error: action.payload, isPending: false})\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateIsFavorite = {\r\n    isFavorite: false\r\n}\r\n\r\nexport const toggleFavorite = (state=initialStateIsFavorite, action={}) => {\r\n    switch(action.type) {\r\n        case TOGGLE_FAVORITE:\r\n            return Object.assign({}, state, {isFavorite: action.payload});\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst initialStateFavoritesList = {\r\n    favorites: []\r\n}\r\n\r\nexport const requestFavoritesData = (state=initialStateFavoritesList, action={}) => {\r\n    switch (action.type) {\r\n        case REQUEST_FAVORITE_DATA_EMPTY:\r\n            return (Object.assign({}, state,{favorites: action.payload}))\r\n        case REQUEST_FAVORITE_DATA_PENDING:\r\n            return Object.assign({}, state, {isPending: true});\r\n        case REQUEST_FAVORITE_DATA_SUCCESS:\r\n            return Object.assign({}, state, {favorites: action.payload, isPending: false});\r\n        case REQUEST_FAVORITE_DATA_FAILED:\r\n            return Object.assign({}, state, {error: action.payload, isPending: false});\r\n        default: return state;\r\n    }\r\n} \r\n\r\n\r\nconst initialStateDayNight = {\r\n    lightBackground: true\r\n}\r\n\r\nexport const toggleDayNight = (state=initialStateDayNight, action={}) => {\r\n    switch (action.type) {\r\n        case TOGGLE_DAY_NIGHT:\r\n            return Object.assign({}, state, {lightBackground: action.payload});\r\n        default: return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers} from 'redux';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\n\nimport { changeUnit, requestSearchOutputs, changeLocation, requestForcast, toggleFavorite, requestFavoritesData, changeRoute, toggleDayNight } from './reducers.js'\n\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nconst logger = createLogger()\n\nconst rootReducer = combineReducers({ changeUnit, requestSearchOutputs, changeLocation, requestForcast, toggleFavorite, requestFavoritesData, changeRoute, toggleDayNight })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}